<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--
        设置业务逻辑的包扫描器，目的是在指定的路径下，使用@Service注解的类，
        Spring负责创建对象，并加载依赖
    -->
    <context:component-scan base-package="cn.edu.uzz.service"></context:component-scan>

    <!-- 设置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--
            可能会有报错，因为applicationContext-dao和applicationContext-service文件内容不在一起的原因
            但是容器在加载配置文件的时候，会加载到
        -->
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 添加事务的切面 -->
    <tx:advice id="myAdvice" transaction-manager="transactionManager" >
		<tx:attributes>
			<!-- 设置所有的查询方法为只读，在查询的时候，其他的操作会回避 -->
			<tx:method name="*select*" read-only="true"/>
			<tx:method name="*find*" read-only="true"/>
			<tx:method name="*get*" read-only="true"/>
			<tx:method name="*search*" read-only="true"/>
			<!-- 增删改设置为支持事务 -->
			<tx:method name="*insert*" propagation="REQUIRED"/>
			<tx:method name="*save*" propagation="REQUIRED"/>
			<tx:method name="*add*" propagation="REQUIRED"/>
			<tx:method name="*delete*" propagation="REQUIRED"/>
			<tx:method name="*remove*" propagation="REQUIRED"/>
			<tx:method name="*clear*" propagation="REQUIRED"/>
			<tx:method name="*update*" propagation="REQUIRED"/>
			<tx:method name="*modify*" propagation="REQUIRED"/>
			<tx:method name="*change*" propagation="REQUIRED"/>
			<tx:method name="*set*" propagation="REQUIRED"/>
			<!-- 如果上面的都不匹配的话，匹配*，设置支持事务 -->
			<tx:method name="*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>

	<!-- 完成切面的切入点织入（把切入点和切面绑定在一起） -->
	<aop:config>
		<!--
			切入点表达式
			* 返回值类型：任意
			cn.edu.uzz.service.*.*(..))：service包下的所有的类和所有的方法的任意参数，都追加事务处理
		-->
		<aop:pointcut id="myPointcut" expression="execution(* cn.edu.uzz.service.*.*(..))"/>
		<!-- 绑定 -->
		<aop:advisor advice-ref="myAdvice" pointcut-ref="myPointcut"></aop:advisor>
	</aop:config>
</beans>
